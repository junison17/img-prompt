import streamlit as st
import openai
from streamlit_quill import st_quill

# OpenAI API 키 설정 (secrets.toml 파일에서 가져오기)
openai.api_key = st.secrets["openai_api_key"]

# 애플리케이션 제목 설정
st.title("MidJourney & DALL-E 3 Prompt Generator with GPT-4o Optimization")

# 레이아웃 설정: 그리드를 활용하여 좌우 배치
col1, col2 = st.columns(2)

# GPT로 프롬프트 최적화 및 번역 함수
def optimize_and_translate_prompt(base_prompt, language="en"):
    # Prompt optimization with GPT-4o
    prompt = f"Translate and optimize this image prompt: {base_prompt}"
    if language == "ko":
        prompt += " (in Korean to English)"
    response = openai.ChatCompletion.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "You are a helpful assistant that optimizes and translates image prompts."},
            {"role": "user", "content": prompt}
        ],
        max_tokens=150,
    )
    optimized_prompt = response.choices[0].message['content'].strip()
    return optimized_prompt

# 첫 번째 컬럼: MidJourney 프롬프트 생성기
with col1:
    st.header("MidJourney Prompt Generator")

    # 핵심 아이디어 입력란 (한국어 입력)
    main_idea = st.text_input("핵심 아이디어를 입력하세요 (한국어)", placeholder="여기에 입력하세요...")

    # 다중 선택을 위한 다양한 옵션
    aspect_ratio = st.selectbox("화면 비율 (--ar)", ["1:1", "16:9", "9:16", "4:3", "3:2"])
    version = st.selectbox("버전 (--v)", ["5", "6", "5.2"])
    quality = st.selectbox("품질 (--q)", ["0.25", "0.5", "1", "2"])
    style_strength = st.slider("예술성 (--s)", 0, 1000, 100)
    uniqueness = st.slider("독특성 (--w)", 0, 3000, 0)
    diversity = st.slider("다양성 (--c)", 0, 100, 50)

    # 네거티브 명령어
    exclusion = st.text_input("제외 요청 (--no)", placeholder="예: tree, people, etc.")

    # 타일 옵션 선택
    tile_option = st.selectbox("타일 옵션 (--tile)", ["No", "Yes"])

    # 최적의 미드저니 프롬프트 생성
    if st.button("Generate and Optimize MidJourney Prompt"):
        base_prompt = (
            f"{main_idea} --ar {aspect_ratio} --v {version} --q {quality} --s {style_strength} "
            f"--w {uniqueness} --c {diversity} --tile {tile_option.lower()} --no {exclusion}"
        )
        # Translate and optimize prompt
        optimized_prompt = optimize_and_translate_prompt(base_prompt, language="ko")
        st.session_state.generated_prompt = optimized_prompt

    # 생성된 프롬프트를 편집할 수 있는 Quill 편집기
    if "generated_prompt" in st.session_state:
        st.subheader("Optimized MidJourney Prompt")
        st.session_state.generated_prompt = st_quill(value=st.session_state.generated_prompt, key="editor1")

# 두 번째 컬럼: DALL-E 3 이미지 생성기
with col2:
    st.header("DALL-E 3 Image Generator")

    # DALL-E 3용 프롬프트 입력 (한국어로 입력)
    dalle_prompt = st.text_area("여기에 DALL-E 3 프롬프트를 입력하세요", height=150, placeholder="생성할 이미지를 한국어로 설명하세요...")

    # 이미지 크기 선택 옵션 추가
    image_size = st.selectbox("Image Size", ["512x512", "1024x1024", "2048x2048"])

    # 최적의 달리3 프롬프트 생성
    if st.button("Generate and Optimize DALL-E 3 Image"):
        optimized_dalle_prompt = optimize_and_translate_prompt(dalle_prompt, language="ko")
        response = openai.Image.create(
            prompt=optimized_dalle_prompt,
            n=1,
            size=image_size
        )
        image_url = response['data'][0]['url']
        st.image(image_url, caption="Generated by DALL-E 3", use_column_width=True)

    # DALL-E 3 프롬프트 편집기
    st.subheader("Edit Your DALL-E 3 Prompt")
    dalle_prompt = st_quill(value=dalle_prompt, key="editor2")

# 이미지 업로드 및 프롬프트 최적화
st.header("Upload an Image for Inspiration")
uploaded_file = st.file_uploader("Upload an image to guide the prompt")

if uploaded_file is not None:
    st.image(uploaded_file, caption="Uploaded Image", use_column_width=True)
    # You can add further functionality here to use the uploaded image for additional processing

# 모두 지우기 버튼
if st.button("Clear All"):
    # Reset all session states and rerun the app
    st.session_state.clear()
    st.experimental_rerun()
